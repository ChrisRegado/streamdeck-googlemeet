name: "Release Extensions"

on:
  release:
    types: [published]

jobs:
  build-extensions:
    name: Build extensions with versioning from git tags
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: browser-extension
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      is-prerelease: ${{ steps.check-prerelease.outputs.is-prerelease }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tags
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install
      
      - name: Get version from git tag
        id: get-version
        run: |
          VERSION=$(node get-version.js)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"
      
      - name: Check if this is a prerelease
        id: check-prerelease
        run: |
          echo "is-prerelease=${{ github.event.release.prerelease }}" >> $GITHUB_OUTPUT
          echo "Release prerelease flag: ${{ github.event.release.prerelease }}"
      
      - name: Update package.json version
        run: npm run update-version
      
      - name: Build and package extensions
        env:
          WEB_EXT_API_KEY: ${{ secrets.FIREFOX_JWT_ISSUER }}
          WEB_EXT_API_SECRET: ${{ secrets.FIREFOX_JWT_SECRET }}
        run: |
          npm run build
          npm run package-chrome
          # Sign Firefox extension (builds and signs in one step)
          npm run sign-firefox
          # Rename extensions for consistency
          mv build/stream_deck_google_meet_actions-*.zip build/firefox-extension.zip
      
      - name: Upload Chrome extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: chrome-extension-${{ steps.get-version.outputs.version }}
          path: browser-extension/build/chrome-extension.zip
      
      - name: Upload Firefox extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: firefox-extension-${{ steps.get-version.outputs.version }}
          path: browser-extension/build/firefox-extension.zip
      
      - name: Attach extensions to release
        if: always()
        uses: softprops/action-gh-release@v1
        with:
          files: |
            browser-extension/build/chrome-extension.zip
            browser-extension/build/firefox-extension.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}