name: "Release Extensions"

on:
  release:
    types: [published]

jobs:
  build-extensions:
    name: Build extensions with versioning from git tags
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: browser-extension
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      is-prerelease: ${{ steps.check-prerelease.outputs.is-prerelease }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tags
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install
      
      - name: Get version from git tag
        id: get-version
        run: |
          VERSION=$(node get-version.js)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"
      
      - name: Check if this is a prerelease
        id: check-prerelease
        run: |
          echo "is-prerelease=${{ github.event.release.prerelease }}" >> $GITHUB_OUTPUT
          echo "Release prerelease flag: ${{ github.event.release.prerelease }}"
      
      - name: Update package.json version
        run: npm run update-version
      
      - name: Build and package extensions
        env:
          WEB_EXT_API_KEY: ${{ secrets.FIREFOX_JWT_ISSUER }}
          WEB_EXT_API_SECRET: ${{ secrets.FIREFOX_JWT_SECRET }}
        run: |
          npm run build
          npm run package-chrome
          npm run sign-firefox
          mv build/streamdeck_googlemeet*.xpi build/firefox-extension.xpi
      
      - name: Upload Chrome extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: chrome-extension-${{ steps.get-version.outputs.version }}
          path: browser-extension/build/chrome-extension.zip
      
      - name: Upload Firefox extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: firefox-extension-${{ steps.get-version.outputs.version }}
          path: browser-extension/build/firefox-extension.xpi

  build-plugin:
    strategy:
      matrix:
        include:
          - os: macos
            runs_on: macos-latest
          - os: windows
            runs_on: windows-latest
    name: Build ${{ matrix.os }} Stream Deck Plugin
    runs-on: ${{ matrix.runs_on }}
    defaults:
      run:
        shell: bash
        working-directory: streamdeck-plugin
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Set up Pip
        run: python -m pip install --upgrade pip
      - name: pip install
        run: pip install -r requirements.txt
      - name: Run unit tests
        run: python -m unittest
      - name: Bundle plugin
        run: pyinstaller --clean --dist ../com.chrisregado.googlemeet.sdPlugin/dist/${{ matrix.os }} src/main.py && rm -rf build
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-plugin-intermediate-build
          path: ${{ github.workspace }}/com.chrisregado.googlemeet.sdPlugin/dist/${{ matrix.os }}

  bundle-streamdeck-distributable:
    name: Bundle multi-OS Stream Deck plugin distributable binary
    runs-on: macos-latest
    needs: [build-plugin]
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Download DistributionTool
        run: curl -L https://github.com/ChrisRegado/streamdeck-build-tools/raw/master/DistributionToolMac/DistributionTool -o DistributionTool
      - name: Make DistributionTool Executable
        run: chmod +x DistributionTool
      - name: Download macOS plugin artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-plugin-intermediate-build
          path: com.chrisregado.googlemeet.sdPlugin/dist/macos
      - name: Download Windows plugin artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-plugin-intermediate-build
          path: com.chrisregado.googlemeet.sdPlugin/dist/windows
      - name: Make output dir
        run: mkdir output
      - name: Bundle plugin
        run: ./DistributionTool -b -i ./com.chrisregado.googlemeet.sdPlugin -o output/
      - name: Upload final plugin binary
        uses: actions/upload-artifact@v4
        with:
          name: com.chrisregado.googlemeet.streamDeckPlugin
          path: output/com.chrisregado.googlemeet.streamDeckPlugin

  attach-to-release:
    name: Attach all artifacts to release
    runs-on: ubuntu-latest
    needs: [build-extensions, bundle-streamdeck-distributable]
    steps:
      - name: Download Chrome extension
        uses: actions/download-artifact@v4
        with:
          name: chrome-extension-${{ needs.build-extensions.outputs.version }}
          path: ./artifacts
      
      - name: Download Firefox extension
        uses: actions/download-artifact@v4
        with:
          name: firefox-extension-${{ needs.build-extensions.outputs.version }}
          path: ./artifacts
      
      - name: Download Stream Deck plugin
        uses: actions/download-artifact@v4
        with:
          name: com.chrisregado.googlemeet.streamDeckPlugin
          path: ./artifacts
      
      - name: Attach all artifacts to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/chrome-extension.zip
            ./artifacts/firefox-extension.xpi
            ./artifacts/com.chrisregado.googlemeet.streamDeckPlugin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}