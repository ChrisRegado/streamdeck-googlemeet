name: "Build and test"

on:
  pull_request:

jobs:
  build-plugin:
    strategy:
      matrix:
        include:
          - os: macos
            runs_on: macos-latest
          - os: windows
            runs_on: windows-latest
    name: Build ${{ matrix.os }} Stream Deck Plugin
    runs-on: ${{ matrix.runs_on }}
    defaults:
      run:
        shell: bash
        working-directory: streamdeck-plugin
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Set up Pip
        run: python -m pip install --upgrade pip
      - name: pip install
        run: pip install -r requirements.txt
      - name: Run unit tests
        run: python -m unittest
      - name: Bundle plugin
        run: pyinstaller --clean --dist ../com.chrisregado.googlemeet.sdPlugin/dist/${{ matrix.os }} src/main.py && rm -rf build
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-plugin-build-${{ github.sha }}
          path: ${{ github.workspace }}/com.chrisregado.googlemeet.sdPlugin/dist/${{ matrix.os }}
          retention-days: 7

  build-browser-extensions:
    name: Build and validate browser extensions
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: browser-extension
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tags
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install
      
      - name: Test version extraction
        run: |
          VERSION=$(node get-version.js)
          echo "Extracted version: $VERSION"
          if [ -z "$VERSION" ]; then
            echo "❌ Version extraction failed"
            exit 1
          fi
      
      - name: Update package.json version
        run: npm run update-version
      
      - name: Build extensions
        run: |
          npm run build
          echo "✅ Build completed successfully"
      
      - name: Package extensions
        run: |
          npm run package-chrome
          npm run package-firefox
          # Rename Firefox extension for consistency
          for file in build/stream_deck_google_meet_actions-*.zip; do
            if [ -f "$file" ]; then
              mv "$file" build/firefox-extension.zip
              break
            fi
          done
          echo "✅ Extensions packaged successfully"
      
      - name: Validate manifest files
        run: |
          # Check that manifest files have the expected structure
          if [ ! -f "build/chrome/manifest.json" ] || [ ! -f "build/firefox/manifest.json" ]; then
            echo "❌ Manifest files not found"
            exit 1
          fi
          
          # Check that version was injected correctly
          CHROME_VERSION=$(node -e "console.log(JSON.parse(require('fs').readFileSync('build/chrome/manifest.json', 'utf8')).version)")
          FIREFOX_VERSION=$(node -e "console.log(JSON.parse(require('fs').readFileSync('build/firefox/manifest.json', 'utf8')).version)")
          
          if [ "$CHROME_VERSION" != "$FIREFOX_VERSION" ]; then
            echo "❌ Version mismatch between Chrome ($CHROME_VERSION) and Firefox ($FIREFOX_VERSION)"
            exit 1
          fi
          
          echo "✅ Manifest validation passed - Version: $CHROME_VERSION"
      
      - name: Run Firefox linting
        run: |
          if command -v web-ext &> /dev/null; then
            npm run lint-firefox
          else
            echo "⚠️ web-ext not available, skipping Firefox linting"
          fi
      
      - name: Upload Chrome extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: chrome-extension-build-${{ github.sha }}
          path: browser-extension/build/chrome-extension.zip
          retention-days: 7
      
      - name: Upload Firefox extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: firefox-extension-build-${{ github.sha }}
          path: browser-extension/build/firefox-extension.zip
          retention-days: 7
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: browser-extensions-build-${{ github.sha }}
          path: browser-extension/build/
          retention-days: 7

  build-summary:
    name: Build summary
    runs-on: ubuntu-latest
    needs: [build-plugin, build-browser-extensions]
    if: always()
    steps:
      - name: Build summary
        run: |
          echo "## 🚀 Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Plugin build status
          echo "### 📦 Stream Deck Plugin" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.build-plugin.result }}" == "success" ]; then
            echo "- **macOS Plugin**: ✅ Built successfully" >> $GITHUB_STEP_SUMMARY
            echo "- **Windows Plugin**: ✅ Built successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Plugin Build**: ❌ Failed - Check logs for details" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Browser extensions status
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🌐 Browser Extensions" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.build-browser-extensions.result }}" == "success" ]; then
            echo "- **Chrome Extension**: ✅ Built and packaged successfully" >> $GITHUB_STEP_SUMMARY
            echo "- **Firefox Extension**: ✅ Built and packaged successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Extension Build**: ❌ Failed - Check logs for details" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Available Artifacts (7 days retention):" >> $GITHUB_STEP_SUMMARY
          echo "- \`macos-plugin-build-${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`windows-plugin-build-${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`chrome-extension-build-${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`firefox-extension-build-${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`browser-extensions-build-${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY 